# Contains jobs corresponding to checking coverage reports generated by code_coverage.yml.
name: Check Coverage Report
on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.run_id }}
  cancel-in-progress: true

jobs:
  check_code_coverage_completed:
    name: Check code coverage completed
    runs-on: ubuntu-latest
    steps:
      - name: Wait for code coverage to complete
        id: wait-for-coverage
        uses: ArcticLampyrid/action-wait-for-workflow@v1.2.0
        with:
          workflow: code_coverage.yml
          sha: auto
          allowed-conclusions: |
            success
            failure

  download_coverage_report:
    name: Download Coverage Report
    needs: check_code_coverage_completed
    if: ${{ !cancelled() }}
    runs-on: ubuntu-latest
    steps:
      - name: Find CI workflow run for PR
        id: find-workflow-run
        uses: actions/github-script@v7
        continue-on-error: true
        with:
          script: |
            const { owner, repo } = context.repo;
            const runsResponse = await github.rest.actions.listWorkflowRuns({
              owner,
              repo,
              workflow_id: 'code_coverage.yml',
              event: 'pull_request',
              head_sha: '${{ github.event.pull_request.head.sha }}',
            });
            const runs = runsResponse.data.workflow_runs;
            runs.sort((a, b) => new Date(b.created_at).getTime() - new Date(a.created_at).getTime());
            const run = runs[0];
            if(!run) {
              core.setFailed('Could not find a succesful workflow run for the PR');
              return;
            }
            core.setOutput('run-id', run.id);

      - name: Download Generated Markdown Report
        uses: actions/download-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: final-coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ steps.find-workflow-run.outputs.run-id }}